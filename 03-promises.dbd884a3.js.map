{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAKjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACPC,KAAKC,SAAW,GAEpCC,YAAW,IAAMJ,EAAQ,C,SAAEF,E,MAAUJ,KAAUA,GAE/CU,YAAW,IAAMH,EAAO,C,SAAEH,E,MAAUJ,KAAUA,EAAM,G,CARxDJ,EAAKC,KAAKc,iBAAiB,UAa3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAKM,OAAOa,MAAOD,GAAK,EAC3CX,EAAcW,EAAI,GAAIlB,EAAKK,KAAKc,MAAQD,IAAKlB,EAAKI,MAAMe,OACvDC,MAAK,EAACZ,SAACA,EAAQJ,MAAEA,KAAWN,EAAAuB,OAAOC,QAAQ,qBAAqBd,QAAeJ,SAC/EmB,OAAM,EAACf,SAACA,EAAQJ,MAAEA,KAAWN,EAAAuB,OAAOG,QAAQ,oBAAoBhB,QAAeJ,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit)\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    setTimeout(() => resolve({ position, delay }), delay);\n  } else {\n    setTimeout(() => reject({ position, delay }), delay);\n  }\n  })\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let promises = [];\n  for (let i = 0; i < +refs.amount.value; i += 1) {\n    createPromise(i + 1, +refs.step.value * i + +refs.delay.value)\n    .then(({position, delay}) => Notify.success(`Fulfilled promise ${position} in ${delay}ms`))\n    .catch(({position, delay}) => Notify.failure(`Rejected promise ${position} in ${delay}ms`))\n  }\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","Math","random","setTimeout","addEventListener","event","preventDefault","i","value","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.dbd884a3.js.map"}