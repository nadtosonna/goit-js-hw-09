{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAoBA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,YAAW,IAAMC,QAAQ,C,SAAEL,E,MAAUC,KAAUA,GAE/CG,YAAW,IAAME,OAAO,C,SAAEN,E,MAAUC,KAAUA,E,EAxBrC,CACXM,KAAMC,SAASC,cAAc,SAC7BR,MAAOO,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,0BAG5BF,KAAKK,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,OAAOK,MAAOD,GAAI,EACrChB,EAAcgB,EAAI,GAAIL,KAAKM,MAAQD,IAAMd,MAAMe,OAC9CC,MAAK,EAACjB,SAACA,EAAQC,MAAEA,KAAWiB,EAAArB,GAASsB,OAAOC,QAAQ,qBAAqBpB,QAAeC,SACxFoB,OAAM,EAACrB,SAACA,EAAQC,MAAEA,KAAWiB,EAAArB,GAASsB,OAAOG,QAAQ,oBAAoBtB,QAAeC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let promises = [];\n  for (let i = 0; i < +amount.value; i+= 1) {\n    createPromise(i + 1, +step.value *(i) + +delay.value)\n    .then(({position, delay}) => Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`))\n    .catch(({position, delay}) => Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`))\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    setTimeout(() => resolve({ position, delay }), delay);\n  } else {\n    setTimeout(() => reject({ position, delay }), delay);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","setTimeout","resolve","reject","form","document","querySelector","step","amount","addEventListener","event","preventDefault","i","value","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.31f9e9b3.js.map"}